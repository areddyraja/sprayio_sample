akka {
  loglevel = INFO
  
  akka {
    # Akka undelivered message settings.
    log-dead-letters = 5
    log-dead-letters-during-shutdown = off
    log-config-on-start = off
    
    io {
      tcp {
       trace-logging = on
      }
    }
    
    # Log level used by the configured loggers (see "loggers") as soon
    # as they have been started; before that, see "stdout-loglevel"
    # Options: OFF, ERROR, WARNING, INFO, DEBUG
    loglevel = DEBUG
    
    # Log level for the very basic logger activated during ActorSystem startup.
    # This logger prints the log messages to stdout (System.out).
    # Options: OFF, ERROR, WARNING, INFO, DEBUG
    stdout-loglevel = DEBUG
    
    # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs to STDOUT)
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    
    # Filter of log events that is used by the LoggingAdapter before
    # publishing log events to the eventStream.
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
	
	actor {
		default-dispatcher {
		    # Must be one of the following
		    # Dispatcher, PinnedDispatcher, or a FQCN to a class inheriting
		    # MessageDispatcherConfigurator with a public constructor with
		    # both com.typesafe.config.Config parameter and
		    # akka.dispatch.DispatcherPrerequisites parameters.
		    # PinnedDispatcher must be used together with executor=thread-pool-executor.
       		type = "Dispatcher"
		    
		    # Which kind of ExecutorService to use for this dispatcher
	    	# Valid options:
	    	# - "default-executor" requires a "default-executor" section
	   	    # - "fork-join-executor" requires a "fork-join-executor" section
		    # - "thread-pool-executor" requires a "thread-pool-executor" section
		    # - A FQCN of a class extending ExecutorServiceConfigurator
		    executor = "fork-join-executor"
			
		    # This will be used if you have set "executor = "default-executor"".
		    # If an ActorSystem is created with a given ExecutionContext, this
		    # ExecutionContext will be used as the default executor for all
		    # dispatchers in the ActorSystem configured with
		    # executor = "default-executor". Note that "default-executor"
		    # is the default value for executor, and therefore used if not
		    # specified otherwise. If no ExecutionContext is given,
		    # the executor configured in "fallback" will be used.
		    fork-join-executor {
               parallelism-min = 50
               parallelism-factor = 4.0
               parallelism-max = 300
		    }
            # Throughput for default Dispatcher, set to 1 for as fair as possible
   	    throughput = 10
		}

		service-dispatcher {
            # Must be one of the following
            # Dispatcher, PinnedDispatcher, or a FQCN to a class inheriting
            # MessageDispatcherConfigurator with a public constructor with
            # both com.typesafe.config.Config parameter and
            # akka.dispatch.DispatcherPrerequisites parameters.
            # PinnedDispatcher must be used together with executor=thread-pool-executor.
            type = "Dispatcher"
            
            # Which kind of ExecutorService to use for this dispatcher
            # Valid options:
            # - "default-executor" requires a "default-executor" section
            # - "fork-join-executor" requires a "fork-join-executor" section
            # - "thread-pool-executor" requires a "thread-pool-executor" section
            # - A FQCN of a class extending ExecutorServiceConfigurator
            executor = "fork-join-executor"
            
            # This will be used if you have set "executor = "default-executor"".
            # If an ActorSystem is created with a given ExecutionContext, this
            # ExecutionContext will be used as the default executor for all
            # dispatchers in the ActorSystem configured with
            # executor = "default-executor". Note that "default-executor"
            # is the default value for executor, and therefore used if not
            # specified otherwise. If no ExecutionContext is given,
            # the executor configured in "fallback" will be used.
            fork-join-executor {
               parallelism-min = 50
               parallelism-factor = 4.0
               parallelism-max = 300
            }

            # Throughput for default Dispatcher, set to 1 for as fair as possible
			throughput = 10
        }
	}
}
}

spray.can.server {
  request-timeout = 1s
}

